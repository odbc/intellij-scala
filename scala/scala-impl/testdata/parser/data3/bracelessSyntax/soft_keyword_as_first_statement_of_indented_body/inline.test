def m1 =
  inline def foo(x: Int) = x + 1
  foo(23)
-----
ScalaFile
  ScFunctionDefinition: m1
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(def)('def')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('m1')
    Parameters
      <empty list>
    PsiWhiteSpace(' ')
    PsiElement(=)('=')
    BlockExpression
      PsiWhiteSpace('\n  ')
      ScFunctionDefinition: foo
        AnnotationsList
          <empty list>
        Modifiers
          PsiElement(inline)('inline')
        PsiWhiteSpace(' ')
        PsiElement(def)('def')
        PsiWhiteSpace(' ')
        PsiElement(identifier)('foo')
        Parameters
          ParametersClause
            PsiElement(()('(')
            Parameter: x
              AnnotationsList
                <empty list>
              Modifiers
                <empty list>
              PsiElement(identifier)('x')
              PsiElement(:)(':')
              PsiWhiteSpace(' ')
              ParameterType
                SimpleType: Int
                  CodeReferenceElement: Int
                    PsiElement(identifier)('Int')
            PsiElement())(')')
        PsiWhiteSpace(' ')
        PsiElement(=)('=')
        PsiWhiteSpace(' ')
        InfixExpression
          ReferenceExpression: x
            PsiElement(identifier)('x')
          PsiWhiteSpace(' ')
          ReferenceExpression: +
            PsiElement(identifier)('+')
          PsiWhiteSpace(' ')
          IntegerLiteral
            PsiElement(integer)('1')
      PsiWhiteSpace('\n  ')
      MethodCall
        ReferenceExpression: foo
          PsiElement(identifier)('foo')
        ArgumentList
          PsiElement(()('(')
          IntegerLiteral
            PsiElement(integer)('23')
          PsiElement())(')')