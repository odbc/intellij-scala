<?xml version="1.0" encoding="iso-8859-1"?>

<idea-plugin>

    <extensions defaultExtensionNs="com.intellij">
        <lang.parserDefinition language="sbt" implementationClass="org.jetbrains.sbt.language.SbtParserDefinition"/>
        <lang.fileViewProviderFactory language="sbt"
                                      implementationClass="org.jetbrains.sbt.language.SbtFileViewProviderFactory"/>
        <fileType name="sbt" language="sbt" extensions="sbt"
                  implementationClass="org.jetbrains.sbt.language.SbtFileType$" fieldName="MODULE$"/>
        <fileType name="sbtShell" language="sbtShell" extensions="sbts"
                  implementationClass="org.jetbrains.sbt.shell.SbtShellParserDefinition$SbtShellFileType$"
                  fieldName="MODULE$"/>
        <annotator language="Scala" implementationClass="org.jetbrains.sbt.annotator.SbtAnnotator"/>
        <annotator language="Scala" implementationClass="org.jetbrains.sbt.annotator.SbtDependencyAnnotator"/>
        <lang.documentationProvider language="Scala" implementationClass="org.jetbrains.sbt.editor.documentationProvider.SbtDocumentationProvider" order="before ScalaDocumentationProvider"/>
        <lang.parserDefinition language="sbtShell" implementationClass="org.jetbrains.sbt.shell.SbtShellParserDefinition"/>

        <externalSystemManager implementation="org.jetbrains.sbt.project.SbtExternalSystemManager"/>

        <externalProjectDataService implementation="org.jetbrains.sbt.project.data.service.SbtModuleExtDataService" order="last"/>
        <externalProjectDataService implementation="org.jetbrains.sbt.project.data.service.SbtProjectDataService"/>
        <externalProjectDataService implementation="org.jetbrains.sbt.project.data.service.SbtBuildModuleDataService"/>
        <externalProjectDataService implementation="org.jetbrains.sbt.project.data.service.SbtModuleDataService"/>
        <externalProjectDataService implementation="org.jetbrains.sbt.project.data.service.SbtSettingDataService"/>
        <externalProjectDataService implementation="org.jetbrains.sbt.project.data.service.SbtTaskDataService"/>
        <externalProjectDataService implementation="org.jetbrains.sbt.project.data.service.SbtCommandDataService"/>
        <externalProjectDataService implementation="org.jetbrains.sbt.project.data.service.Play2StubDataService"/>

        <externalSystemConfigLocator implementation="org.jetbrains.sbt.project.SbtConfigLocator"/>
        <externalSystemViewContributor implementation="org.jetbrains.sbt.project.SbtViewContributor"/>
        <externalIconProvider key="SBT" implementationClass="org.jetbrains.sbt.SbtIconProvider"/>

        <projectService serviceImplementation="org.jetbrains.sbt.settings.SbtSettings"/>
        <projectService serviceImplementation="org.jetbrains.sbt.project.settings.SbtLocalSettings"/>
        <projectService serviceImplementation="org.jetbrains.sbt.shell.SbtShellCommunication"/>
        <projectService serviceImplementation="org.jetbrains.sbt.shell.SbtProcessManager"/>
        <projectService serviceImplementation="org.jetbrains.sbt.language.SbtProjectService"/>
        <projectService serviceImplementation="org.jetbrains.sbt.resolvers.SbtIndexesManager"/>
        <moduleService serviceImplementation="org.jetbrains.sbt.project.module.SbtModule"/>

        <projectImportProvider implementation="org.jetbrains.sbt.project.SbtProjectImportProvider"/>
        <projectImportBuilder implementation="org.jetbrains.sbt.project.SbtProjectImportBuilder"/>

        <projectOpenProcessor implementation="org.jetbrains.sbt.project.SbtProjectOpenProcessor"/>

        <moduleType id="SBT_MODULE" implementationClass="org.jetbrains.sbt.project.module.SbtModuleType"/>
        <moduleConfigurationEditorProvider implementation="org.jetbrains.sbt.project.module.SbtModuleEditorProvider"/>

        <moduleType id="SHARED_SOURCES_MODULE" implementationClass="org.jetbrains.sbt.project.sources.SharedSourcesModuleType"/>
        <moduleConfigurationEditorProvider implementation="org.jetbrains.sbt.project.sources.SharedSourcesModuleEditorProvider"/>

        <projectTemplatesFactory implementation="org.jetbrains.sbt.project.template.SbtProjectTemplateFactory" order="first"/>
        <projectTemplatesFactory implementation="org.jetbrains.sbt.project.template.DottyProjectTemplatesFactory" order="last"/>

        <!--suppress PluginXmlCapitalization -->
        <projectConfigurable groupId="build.tools" bundle="messages.ScalaSbtBundle"
                             key="displayname.sbt"
                             instance="org.jetbrains.sbt.settings.SbtExternalSystemConfigurable"/>

        <toolWindow id="sbt" anchor="right"
                    icon="/org/jetbrains/plugins/scala/images/sbt_toolwin.svg"
                    factoryClass="org.jetbrains.sbt.project.SbtToolWindowFactory"/>

        <toolWindow id="sbt-shell-toolwindow" anchor="bottom" canCloseContents="false"
                    icon="/org/jetbrains/plugins/scala/images/sbt_shell_toolwin.svg"
                    factoryClass="org.jetbrains.sbt.shell.SbtShellToolWindowFactory"
                    doNotActivateOnStart="true"/>

        <psi.referenceContributor implementation="org.jetbrains.sbt.language.references.SbtReferenceContributor" order="first"/>

        <externalSystemTaskNotificationListener implementation="org.jetbrains.sbt.project.SbtNotificationListener"/>
        <completion.contributor language="Scala" implementationClass="org.jetbrains.sbt.language.completion.SbtCompletionContributor"
                                order="first, before liveTemplates" id="sbtCompletionContributor"/>
        <completion.contributor language="Scala"
                                implementationClass="org.jetbrains.sbt.language.completion.SbtMavenDependencyCompletionContributor"
                                order="after scalaCompletionContrubutor"/>
        <completion.contributor language="sbtShell" implementationClass="org.jetbrains.sbt.shell.SbtShellCompletionContributor"
                                order="first"/>
        <weigher key="completion" implementationClass="org.jetbrains.sbt.language.completion.SbtDefinitionWeigher"
                 id="scalaSbtDefinitionWeigher" order="before scalaContainingClassWeigher, before scalaMethodCompletionWeigher"/>

        <defaultLiveTemplates file="liveTemplates/sbt"/>
        <liveTemplateContext implementation="org.jetbrains.sbt.codeInsight.template.SbtLiveTemplateContextType"/>

        <!--suppress PluginXmlCapitalization -->
        <localInspection implementationClass="org.jetbrains.sbt.codeInspection.SbtReplaceProjectWithProjectInInspection"
                         bundle="messages.ScalaSbtBundle"
                         key="displayname.replace.project.with.project.in"
                         groupKey="group.sbt"
                         shortName="SbtReplaceProjectWithProjectIn"
                         level="WARNING" enabledByDefault="true" language="Scala"/>

        <configurationType implementation="org.jetbrains.sbt.runner.SbtConfigurationType"/>

        <programRunner implementation="org.jetbrains.sbt.runner.SbtProgramRunner" order="first"/>
        <programRunner implementation="org.jetbrains.sbt.runner.SbtDebugProgramRunner" order="first"/>

        <projectTaskRunner implementation="org.jetbrains.sbt.shell.SbtProjectTaskRunner"/>

        <runAnything.executionProvider implementation="org.jetbrains.sbt.SbtRunAnythingProvider"/>

        <registryKey key="SBT.system.in.process" defaultValue="true" restartRequired="true"
                     description="Internal, do not change"/>
    </extensions>

    <extensions defaultExtensionNs="org.intellij.scala">
        <unresolvedReferenceFixProvider implementation="org.jetbrains.sbt.annotator.dependency.AddSbtDependencyFixProvider"/>
    </extensions>

    <actions>
        <action id="Scala.Sbt.RunTask" class="org.jetbrains.sbt.shell.action.RunTaskAction"/>
        <action id="Scala.Sbt.ShowTask" class="org.jetbrains.sbt.shell.action.ShowTaskAction"/>
        <action id="Scala.Sbt.InspectTask" class="org.jetbrains.sbt.shell.action.InspectTaskAction"/>
        <action id="Scala.Sbt.ShowSetting" class="org.jetbrains.sbt.shell.action.ShowSettingAction"/>
        <action id="Scala.Sbt.InspectSetting" class="org.jetbrains.sbt.shell.action.InspectSettingAction"/>
        <action id="Scala.Sbt.RunCommand" class="org.jetbrains.sbt.shell.action.RunCommandAction"/>
        <action id="Scala.Sbt.Help" class="org.jetbrains.sbt.shell.action.SbtHelpAction"/>

        <group id="Scala.Sbt.TaskMenu" popup="true">
            <reference ref="RunContextGroup"/>
            <separator/>
            <reference ref="Scala.Sbt.RunTask"/>
            <reference ref="Scala.Sbt.ShowTask"/>
            <reference ref="Scala.Sbt.InspectTask"/>
            <reference ref="Scala.Sbt.Help"/>
        </group>

        <group id="Scala.Sbt.SettingMenu" popup="true">
            <reference ref="RunContextGroup"/>
            <separator/>
            <reference ref="Scala.Sbt.ShowSetting"/>
            <reference ref="Scala.Sbt.InspectSetting"/>
            <reference ref="Scala.Sbt.Help"/>
        </group>

        <group id="Scala.Sbt.CommandMenu" popup="true">
            <reference ref="RunContextGroup"/>
            <separator/>
            <reference ref="Scala.Sbt.RunCommand"/>
            <reference ref="Scala.Sbt.Help"/>
        </group>

    </actions>

</idea-plugin>
